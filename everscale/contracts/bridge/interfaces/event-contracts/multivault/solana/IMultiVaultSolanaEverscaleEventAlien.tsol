pragma ever-solidity >= 0.62.0;


import "./../../../event-configuration-contracts/ISolanaEverscaleEventConfiguration.tsol";
import "./../../../alien-token-merge/merge-pool/IMergePool_V2.tsol";


interface IMultiVaultSolanaEverscaleEventAlien {
    function receiveConfigurationDetails(
        ISolanaEverscaleEventConfiguration.BasicConfiguration,
        ISolanaEverscaleEventConfiguration.SolanaEverscaleEventConfiguration _networkConfiguration,
        TvmCell
    ) external;

    function receiveAlienTokenRoot(
        address token_
    ) external;

    function receiveTokenName(
        string
    ) external;

    function receiveMergeRouter(
        address router_
    ) external;

    function receiveMergeRouterPool(
        address pool_
    ) external;

    function receiveMergePoolCanon(
        address canon_,
        IMergePool_V2.Token canonToken_
    ) external;

    function getDecodedData() external responsible returns(
        uint256 base_token_,
        string name_,
        string symbol_,
        uint8 decimals_,
        uint128 amount_,
        address recipient_,
        uint64 value_,
        uint expected_evers_,
        TvmCell payload_,
        address proxy_,
        address token_
    );

    function dailyLimitReached(address _approver) external;
}
